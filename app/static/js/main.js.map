{"version":3,"sources":["1-variables.js","2-theme.js"],"names":["hamburger","document","getElementById","hamburgerIcon","children","linkList","navBar","let","navBarColor","getComputedStyle","getPropertyValue","lastScrollPosition","navBarBgColorDark","navBarBgColorLight","addEventListener","classList","toggle","window","innerWidth","remove","add","body","querySelector","btnContent","querySelectorAll","header","root","linkContainer","osThemeDark","matchMedia","matches","osThemeLight","currentTheme","localStorage","getItem","sunIcon","moonIcon","lightColor","darkColor","extraColor","className","style","backgroundColor","color","clientWidth","i","length","console","log","setItem","e","scrollY","clientHeight","background","undefined","passive"],"mappings":"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","file":"main.js","sourcesContent":["const hamburger = document.getElementById('hamburger')\nconst hamburgerIcon = hamburger.children[0];\nconst linkList = document.getElementById('link-container')\nconst navBar = document.getElementById('navbar-container')\n\nlet navBarColor = getComputedStyle(navBar).getPropertyValue('background')\n\nlet lastScrollPosition = 0\n\nlet navBarBgColorDark = 'rgba(0,0,0,0.8)'\nlet navBarBgColorLight = 'rgba(255,255,255,0.7)'\n\n// Hamburger Button Related Code\nhamburger.addEventListener('click', () => {\n    linkList.classList.toggle('no-display')\n  })\n  \n  window.addEventListener('', () => {\n    if (window.innerWidth > 600) {\n      linkList.classList.remove('no-display')\n    } else {\n      linkList.classList.add('no-display')\n    }\n  })","const toggle = document.getElementById('toggle-btn');\r\nconst body = document.querySelector('body');\r\nconst btnContent = document.querySelectorAll('.btn-element');\r\nconst header = document.getElementById('header');\r\nconst root = document.querySelector(':root');\r\nconst linkContainer = document.getElementById('link-container');\r\n\r\n\r\nvar osThemeDark = window.matchMedia('(prefers-color-scheme: dark)')\r\n.matches;\r\n\r\nvar osThemeLight = window.matchMedia('(prefers-color-scheme: light)')\r\n.matches;\r\n\r\nvar currentTheme = localStorage.getItem(\"theme\");\r\n\r\nconst sunIcon  = \"bi bi-brightness-high-fill\";\r\nconst moonIcon = \"bi bi-moon-stars-fill\";\r\n\r\nvar lightColor = getComputedStyle(root)\r\n.getPropertyValue('--default-light-theme-color');\r\nvar darkColor  = getComputedStyle(root)\r\n.getPropertyValue('--default-dark-theme-color');\r\nvar extraColor =  getComputedStyle(root)\r\n.getPropertyValue('--link-text-color-dark');\r\n\r\n// var screenWidth = getComputedStyle();\r\n\r\nwindow.addEventListener('load', () => {\r\n    if(currentTheme === \"dark\") {\r\n        toggle.className = moonIcon;\r\n        body.style.backgroundColor = darkColor;\r\n        hamburgerIcon.style.color = lightColor;\r\n        navBar.clientWidth >= 600 ? linkContainer.style.backgroundColor = \"none\" : linkContainer.style.backgroundColor = darkColor\r\n        header.style.color = lightColor;\r\n        toggle.style.color = lightColor;\r\n        for(let i = 0; i < btnContent.length; i++) {\r\n            btnContent[i].style.color = lightColor;\r\n        }\r\n        console.log(\"Dark But Not OS Theme Dark\")\r\n    }\r\n    else if (osThemeDark && currentTheme == null){\r\n        toggle.className = moonIcon;\r\n        body.style.backgroundColor = darkColor;\r\n        hamburgerIcon.style.color = lightColor;\r\n        linkContainer.style.backgroundColor = darkColor;\r\n        header.style.color = lightColor;\r\n        toggle.style.color = lightColor;\r\n        for(let i = 0; i < btnContent.length; i++) {\r\n            btnContent[i].style.color = lightColor;\r\n        }\r\n        console.log(\"Dark But OS Theme Undefined As Well\")\r\n    }\r\n    else if (osThemeLight && currentTheme == null) {\r\n        toggle.className = sunIcon;\r\n        body.style.backgroundColor = lightColor;\r\n        hamburgerIcon.style.color = darkColor;\r\n        header.style.color = darkColor;\r\n        toggle.style.color = darkColor;\r\n        for(let i = 0; i < btnContent.length; i++) {\r\n            btnContent[i].style.color = darkColor;\r\n        }\r\n        console.log(\"Light But OS Theme Undefined As Well\")\r\n    }\r\n    else {\r\n        toggle.className = sunIcon;\r\n        body.style.backgroundColor = lightColor;\r\n        header.style.color = darkColor;\r\n        hamburgerIcon.style.color = darkColor;\r\n        toggle.style.color = darkColor;\r\n        for(let i = 0; i < btnContent.length; i++) {\r\n            btnContent[i].style.color = darkColor;\r\n        }\r\n        console.log(\"Light But Not OS Theme Dark\")\r\n    }\r\n})\r\n\r\ntoggle.addEventListener('click', () => {\r\n    if(toggle.className === moonIcon){\r\n        toggle.className = sunIcon;\r\n        body.style.backgroundColor = lightColor;\r\n        hamburgerIcon.style.color = darkColor;\r\n        toggle.style.color = darkColor;\r\n        header.style.color = darkColor;\r\n        for(let i = 0; i < btnContent.length; i++) {\r\n            btnContent[i].style.color = darkColor;\r\n        }\r\n        localStorage.setItem('theme', 'light');\r\n    }\r\n    else {\r\n        toggle.className = moonIcon;\r\n        body.style.backgroundColor = darkColor;\r\n        header.style.color = lightColor;\r\n        hamburgerIcon.style.color = lightColor;\r\n        toggle.style.color = lightColor;\r\n        for(let i = 0; i < btnContent.length; i++) {\r\n            btnContent[i].style.color = lightColor;\r\n        }\r\n        localStorage.setItem('theme', 'dark');\r\n    }\r\n})\r\ndocument.addEventListener(\r\n    'scroll',\r\n    function (e) {\r\n      if (window.scrollY > navBar.clientHeight - 50) {\r\n        if (osThemeDark && currentTheme==undefined) {\r\n                navBar.style.background = 'rgba(0,0,0,0.8)'\r\n        } \r\n        else if(osThemeDark && currentTheme === \"dark\") {\r\n          navBar.style.background = 'rgba(0,0,0,0.8)'\r\n        }\r\n        else if(osThemeLight && currentTheme ==undefined) {\r\n            navBar.style.background = 'rgba(255,255,255,0.85)'\r\n        }\r\n        else {\r\n            navBar.style.background = 'rgba(255,255,255,0.85)'\r\n        }\r\n      } else {\r\n        navBar.style.background = navBarColor\r\n      }\r\n      lastScrollPosition = window.scrollY\r\n    },\r\n    { passive: true }\r\n  )\r\n\r\nconsole.log(navBar.clientWidth);"]}